/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_mybotdetection_free(a: number, b: number): void;
export function __wbg_event_free(a: number, b: number): void;
export function __wbg_get_event_coordinate(a: number): number;
export function __wbg_set_event_coordinate(a: number, b: number): void;
export function __wbg_coordinate_free(a: number, b: number): void;
export function __wbg_get_coordinate_x(a: number): number;
export function __wbg_set_coordinate_x(a: number, b: number): void;
export function __wbg_get_coordinate_y(a: number): number;
export function __wbg_set_coordinate_y(a: number, b: number): void;
export function __wbg_botdetectionoutput_free(a: number, b: number): void;
export function __wbg_get_botdetectionoutput_humanScore(a: number): number;
export function __wbg_set_botdetectionoutput_humanScore(a: number, b: number): void;
export function __wbg_get_botdetectionoutput_timestamp(a: number): number;
export function __wbg_set_botdetectionoutput_timestamp(a: number, b: number): void;
export function mybotdetection_new(): number;
export function mybotdetection_fromEvents(a: number, b: number): number;
export function mybotdetection_addEvent(a: number, b: number, c: number, d: number): void;
export function mybotdetection_saveResult(a: number, b: number): void;
export function mybotdetection_saveBorrowedResult(a: number, b: number): void;
export function mybotdetection_allEvents(a: number, b: number): void;
export function mybotdetection_events(a: number, b: number, c: number, d: number): void;
export function mybotdetection_num_events(a: number): number;
export function mybotdetection_results(a: number, b: number): void;
export function mybotdetection_isBot(a: number): number;
export function botdetectionoutput_text(a: number, b: number): void;
export function coordinate_new(a: number, b: number): number;
export function __wbg_set_event_timestamp(a: number, b: number): void;
export function __wbg_get_event_timestamp(a: number): number;
export function __wbindgen_export_0(a: number, b: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_export_1(a: number, b: number, c: number): void;
